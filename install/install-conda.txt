conda create -n env368 python==3.6.8
conda activate env368

conda install numpy ninja pyyaml setuptools cmake cffi typing_extensions future six requests dataclasses
conda install tqdm pysoundfile kaldi_io pydub tensorboardx matplotlib adversarial-robustness-toolbox decorator pooch resampy -c conda-forge
pip install --no-deps audioread librosa noisereduce

#install pytorch from source
wget https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux_ppc64le.run
chmod a+x cuda_10.2.89_440.33.01_linux_ppc64le.run
bash ./cuda_10.2.89_440.33.01_linux_ppc64le.run --toolkit --toolkitpath=$HOME/cuda_10.2 --defaultroot=$HOME/cuda_10.2 #remove driver option
export "CUDA_HOME=$HOME/cuda_10.2/" >> ~/.bashrc
echo "export PATH=$HOME/cuda_10.2/bin:$PATH" >> ~/.bashrc
echo "export LD_LIBRARY_PATH=\"$HOME/cuda_10.2/lib64/\"" >> ~/.bashrc
export "CUDA_ROOT=$HOME/cuda_10.2/" >> ~/.bashrc
echo "export CUDA_TOOLKIT_ROOT=$HOME/cuda_10.2/lib64/" >> ~/.bashrc
echo "export CMAKE_CUDA_COMPILER=$HOME/cuda_10.2/bin/nvcc" >> ~/.bashrc
source ~/.bashrc
conda install cudatoolkit=10.2
tar -zxvf cudnn-10.2-linux-ppc64le-v8.0.5.39.tgz #needs to be downloaded from https://developer.nvidia.com/rdp/cudnn-download
cp cuda/targets/ppc64le-linux/include/cudnn* ~/cuda_10.2/include/
cp cuda/targets/ppc64le-linux/lib* ~/cuda_10.2/lib64/
chmod a+r ~/cuda_10.2/include/cudnn* ~/cuda_10.2/lib64/libcudnn*
git clone --recursive https://github.com/pytorch/pytorch
cd pytorch
git checkout 1c64f86#miacle, this one looks stable - v1.8.1
git submodule sync
git submodule update --init --recursive --jobs 0
export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
python setup.py install
#################

