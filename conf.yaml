inputs: inputs/attack_inputs.txt 
input_dir: "asvspoofWavs"
lengths: inputs/lengths

seed: 0000 #1234
sr: 16000
length: 64000
system: ADVSR
attack_type: CM_Attack
num_samples:  10
silence_threshold: "-35.0" #"-20.0" #-25.0
log_interval: 1
perf_log: perf.txt
print_iter_out: True
write_wavs: False #True
write_plots: False #True

shadow:
    cm: "dev"
    asv: "dev"
target: 
    cm: "train"
    asv: "train"

loss: null
#    type: "OCLoss"
#    requires_device: false
#    args: {} 

discriminator_wb: 
    args: 
        cm: #ignored for ADVSR
            selector: [lcnnFull] #[SENet] #lcnnFull] #one of [SSNet, SENet, lcnnFull, lcnnHalf, rawGAT_st, mcg, mlcg, Res2Net, AIR, comparative, darts]
            lambda: 3 #ignored for ADVSR, ADVCM
        asv: #ignored for ADVCM
            selector: [mfcc] #one of [mfcc, lps, xvec]
            lambda: 1 #ignored for ADVSR, ADVCM
        

discriminators:
    args:
        cm: #ignored for ADVSR
            selector: [SSNet, lcnnFull, rawGAT_st, mcg, mlcg, Res2Net, AIR, darts, comparative, RawDarts, AASSIST, AASSIST-L, AIR_AM] #[rawGAT_st, RawDarts, Res2Net, AASSIST, AASSIST-L] #[SSNet, lcnnFull, rawGAT_st, mcg, mlcg, Res2Net, AIR, darts, comparative, RawDarts, AASSIST, AASSIST-L, AIR_AM] 
        asv: #ignored for ADVCM
            selector: [mfcc] #one of [mfcc, lps, xvec]

TIME_DOMAIN_ATTACK:
    epsilon: 0.001 #0.001 
    max_iter: 30
    norm: null

FFT_Attack:
    epsilon: 0.015
    max_iter: 10
    factor: null
    thresh: null
    sr: null
    norm: null

STFT_Attack:
    epsilon: 0.0005 #0.05
    max_iter: 30 #15
    nfft: 512 #400
    window: 'kaiser_window' #'kaiser_window' #kaiser_window hann_window hamming_window bartlett_window blackman_window
    hop_length: 256 ##160
    win_length: 512 #400 #1024 
    factor: null
    thresh: null
    sr: null
    norm: null

auto_pgd:
    #norm: 2
    eps: 0.003 #8/255
    eps_step: 0.0003
    
    targeted: true
    nb_random_init: 1
    batch_size: 1
    #loss_type

carlini:
    targeted: true
    #max_iter: 500
    confidence: 5.0 #>= 0.0. Confidence of adversarial examples: a higher value produces examples that are farther away,
    learning_rate: 0.01 #The initial learning rate for the attack algorithm. Smaller values produce better results
    #binary_search_steps: 10
    #max_halving: 10 
    #max_doubling: 10 

boundary:
    batch_size: 1
    targeted: false
    max_iter: 100
    epsilon: 1 #lower values caused the model never to converge. 0.01. Initial step size for the step towards the target
    delta: 1 #same. 0.01. Initial step size for orthogonal step
    num_trial: 25 #Maximum number of trials for initial generation of adversarial examples
    sample_size: 1 #best otherwise we have to change code. Not supported
    init_size: 10 #matches sample_size

bb:
    #norm : inf #The norm of the adversarial perturbation. Possible values: "inf", np.inf, 1 or 2
    batch_size: 1
    init_size: 25 #Maximum number of random search steps to find initial adversarial example.
    overshoot: 1.
    steps: 200
    binary_search_steps: 10 #maybe change this. works for 1
    lr: 1.e-6

CM_Attack:
    first_layer:
        type: "TIME_DOMAIN_ATTACK"
        args:  
            epsilon: 0.005 
            max_iter: 30
            delta: null
            norm: null #'fro'
    
    last_layer:
        type: "TIME_DOMAIN_ATTACK"
        args:  
            epsilon: 0.0015
            max_iter: 30
            delta: null 
            norm: null #'fro'
        
    mid_layers: [
                 {'type': 'STFT_Attack',
                  'args': { 
                           epsilon: 0.0004,
                           delta: 0,
                           nfft: 512,
                           window: 'kaiser_window', 
                           hop_length: 256, 
                           win_length: 512, 
                           max_iter: 1,
                           factor: 0.25, 
                           thresh: 2500,
                           sr: 16000,
                           norm: null #'fro'
                          }
                 },
                 {'type': 'FFT_Attack',
                  'args': { 
                           epsilon: 0.2,
                           delta: 0,
                           max_iter: 1,
                           factor: 0.25, 
                           thresh: 2500,
                           sr: 16000,
                           norm: null #'fro'
                          }
                 }
                ]
    itrs: 6
    alpha_factors:
        STFT_Attack: 1
        FFT_Attack: 1
    powers:
        STFT_Attack: 0.9 
        FFT_Attack: 1.2 
    r_c:
        stationary: true
        win: 'kaiser_window' #'blackman_window'
        n_fft: 512
        hop_length: 96
        win_length: 512
        freq_mask_smooth_hz: 500
        time_mask_smooth_ms: 60
        padding: 30000
    stop_reduce: 20 
    r_div: 7
    k_div: 2.3 # best: 1.1*stacks - 1
    stacks: 3
    interval: 1
    optim_sat: 15
    stationary: false
    apply_args_to_layers: all #all_but_last #all_but_first
    verbose: 1

r_args:
    p: 1
    n_std_thresh_stationary: 1.5
